version: 2
jobs:
  build:
    docker:
      - image: cypress/browsers:chrome65-ff57
        environment:
          ## this enables colors in the output
          TERM: xterm
    parallelism: 1
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
          key: v1-deps-{{ .Branch }}
          key: v1-deps

      - run: node --version
      - run: npm --version
      - run: npm ci

      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache

      # Randomly pick 1 out of 5 LUIS Authoring Keys and set the BASH_ENV with it.
      - run: node .circleci/SetLuisAuthoringKey.js >> $BASH_ENV

      - run: npm run test
      - run: npm run cibuild

      # Clone the Samples BOT
      - run: git clone https://github.com/Microsoft/ConversationLearner-Samples -b develop ../cl-samples
      
      # Install and build sample Bot application
      - run: cd ../cl-samples && npm ci
      - run: cd ../cl-samples && npm run build

      # Run sample
      - run: 
          command: cd ../cl-samples && npm start
          background: true

      # Run UI
      - run: 
          command: npm start
          background: true

      # Run UI e2e tests
      # Need to add in --parallel once we have a license for it from Cypress
      - run: npm run cypress -- run --record --key $CYPRESS_RECORD_KEY --spec "cypress/integration/CreateModels/AllEntityTypes.spec.js,cypress/integration/CreateModels/DisqualifyingEntities.spec.js,cypress/integration/CreateModels/Travel.spec.js,cypress/integration/CreateModels/WaitVsNoWaitActions.spec.js,cypress/integration/CreateModels/WhatsYourName.spec.js,cypress/integration/EditAndBranching/AddEndSessionAction.spec.js,cypress/integration/EditAndBranching/Branching.spec.js,cypress/integration/EditAndBranching/VerifyEditTrainingControlsAndLabels.spec.js,cypress/integration/ErrorHandling/ActionUnavailable.spec.js,cypress/integration/ErrorHandling/MissingAction.spec.js,cypress/integration/ErrorHandling/TwoConsecutiveUserInput.spec.js,cypress/integration/ErrorHandling/WaitNonWait.spec.js,cypress/integration/Log/WhatsYourName.spec.js,cypress/integration/Train/BookMeAFlight.spec.js,cypress/integration/Train/DisqualifyingEntities.spec.js,cypress/integration/Train/MyNameIs.spec.js,cypress/integration/Train/TagAndFrog.spec.js,cypress/integration/Train/WaitVsNoWaitActions.spec.js,cypress/integration/Train/WhatsYourName.spec.js,cypress/integration/UX/BotModelMismatch.spec.js"
      - run: 
          command: npm run cypress -- run  --record --key $CYPRESS_RECORD_KEY --spec "cypress/integration/Tools/DeleteAllTestGeneratedModels.spec.js"
          when: always

      - store_artifacts:
          path: results
          
      - store_test_results:
          path: results
      
workflows:
  version: 2
  build:
    jobs:
      - build