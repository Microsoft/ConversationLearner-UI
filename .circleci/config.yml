version: 2.1
jobs:
  build:
    docker:
      - image: cypress/browsers:chrome65-ff57
        environment:
          TERM: xterm
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-deps-{{ .Branch }}
            - v1-deps

      - run: node --version
      - run: npm --version
      - run: npm ci

      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache

      - run: npm run test
      - run: npm run cibuild

  test:
    docker:
      - image: cypress/browsers:chrome65-ff57
        environment:
          ## this enables colors in the output
          TERM: xterm
          ipc: host ## https://github.com/cypress-io/cypress/issues/350
    parallelism: 1
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-deps-{{ .Branch }}
            - v1-deps

      - run: node --version
      - run: npm --version
      - run: npm ci

      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache

      # Randomly pick 1 out of 5 LUIS Authoring Keys and set the BASH_ENV with it.
      - run: node .circleci/SetLuisAuthoringKey.js >> $BASH_ENV

      # Clone the Samples BOT
      - run: git clone https://github.com/Microsoft/ConversationLearner-Samples -b test ../cl-samples
      
      # Install and build sample Bot application
      - run: cd ../cl-samples && npm ci
      - run: cd ../cl-samples && npm run build

      # Run sample
      - run: 
          command: cd ../cl-samples && npm run test-ApiCallbacks
          background: true

      # Run UI
      - run: 
          command: npm start
          background: true

      # Run UI e2e tests
      # Need to add in --parallel once we have a license for it from Cypress
      - run: npm run cypress -- run --record false --spec  "cypress/integration/Regression/**/*.spec.js"

      - store_artifacts:
          path: results

      - store_artifacts:
          path: cypress/videos

      - store_artifacts:
          path: cypress/screenshots
          
      - store_test_results:
          path: results


      - run: 
          command: npm run cypress -- run --record false --spec "cypress/integration/Tools/DeleteAllTestGeneratedModels.spec.js"
          when: always

      - store_artifacts:
          path: results

      - store_artifacts:
          path: cypress/videos

      - store_artifacts:
          path: cypress/screenshots
          
          
workflows:
  build-test:
    jobs:
      - build
      - test:
          requires:
              - build